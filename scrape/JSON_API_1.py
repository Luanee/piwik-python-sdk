# generated by datamodel-codegen:
#   filename:  tags.yaml
#   timestamp: 2024-08-30T12:31:58+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, ConfigDict, Field, RootModel

from . import (
    DateDefinition,
    TimeDefinition,
    TriggerRelationshipItem,
    TriggerRelationshipItem1,
    TriggerRelationshipItem2,
    TriggerRelationshipItem3,
    TriggerRelationshipItem4,
    TriggerRelationshipItem5,
    TriggerRelationshipItem6,
    TriggerRelationshipItem7,
    TriggerRelationshipItem8,
    TriggerRelationshipItem9,
    TriggerRelationshipItem10,
    TriggerRelationshipItem11,
    TriggerRelationshipItem12,
    TriggerRelationshipItem13,
    TriggerRelationshipItem14,
    TriggerRelationshipItem15,
    TriggerRelationshipItem16,
    TriggerRelationshipItem17,
    TriggerRelationshipItem18,
    TriggerRelationshipItem19,
    TriggerRelationshipItem20,
    TriggerRelationshipItem21,
    TriggerRelationshipItem22,
    TriggerRelationshipItem23,
    TriggerRelationshipItem24,
    TriggerRelationshipItem25,
    TriggerRelationshipItem26,
    TriggerRelationshipItem27,
    TriggerRelationshipItem28,
    TriggerRelationshipItem29,
    TriggerRelationshipItem30,
    TriggerRelationshipItem31,
    TriggerRelationshipItem32,
    TriggerRelationshipItem33,
    TriggerRelationshipItem34,
    TriggerRelationshipItem35,
    TriggerRelationshipItem36,
    TriggerRelationshipItem37,
    TriggerRelationshipItem38,
    TriggerRelationshipItem39,
    TriggerRelationshipItem40,
    TriggerRelationshipItem41,
    TriggerRelationshipItem42,
    TriggerRelationshipItem43,
    TriggerRelationshipItem44,
    TriggerRelationshipItem45,
    TriggerRelationshipItem46,
    TriggerRelationshipItem47,
    TriggerRelationshipItem48,
    TriggerRelationshipItem49,
    TriggerRelationshipItem50,
    TriggerRelationshipItem51,
    TriggerRelationshipItem52,
    TriggerRelationshipItem53,
    TriggerRelationshipItem54,
    TriggerRelationshipItem55,
    TriggerRelationshipItem56,
    TriggerRelationshipItem57,
    TriggerRelationshipItem58,
    TriggerRelationshipItem59,
    TriggerRelationshipItem60,
    TriggerRelationshipItem61,
    TriggerRelationshipItem62,
    TriggerRelationshipItem63,
    TriggerRelationshipItem64,
    TriggerRelationshipItem65,
    TriggerRelationshipItem66,
    TriggerRelationshipItem67,
    TriggerRelationshipItem68,
    TriggerRelationshipItem69,
    TriggerRelationshipItem70,
    TriggerRelationshipItem71,
    TriggerRelationshipItem72,
    TriggerRelationshipItem73,
    TriggerRelationshipItem74,
    TriggerRelationshipItem75,
    TriggerRelationshipItem76,
    TriggerRelationshipItem77,
    TriggerRelationshipItem78,
    TriggerRelationshipItem79,
    TriggerRelationshipItem80,
    TriggerRelationshipItem81,
    TriggerRelationshipItem82,
    TriggerRelationshipItem83,
    TriggerRelationshipItem84,
    TriggerRelationshipItem85,
    TriggerRelationshipItem86,
    TriggerRelationshipItem87,
    TriggerRelationshipItem88,
    TriggerRelationshipItem89,
    TriggerRelationshipItem90,
    TriggerRelationshipItem91,
    TriggerRelationshipItem92,
    TriggerRelationshipItem93,
    TriggerRelationshipItem94,
    TriggerRelationshipItem95,
    TriggerRelationshipItem96,
    TriggerRelationshipItem97,
    TriggerRelationshipItem98,
    TriggerRelationshipItem99,
    TriggerRelationshipItem100,
    TriggerRelationshipItem101,
    TriggerRelationshipItem102,
    TriggerRelationshipItem103,
    TriggerRelationshipItem104,
    TriggerRelationshipItem105,
    TriggerRelationshipItem106,
    TriggerRelationshipItem107,
    TriggerRelationshipItem108,
    TriggerRelationshipItem109,
    TriggerRelationshipItem110,
    TriggerRelationshipItem111,
    TriggerRelationshipItem112,
    TriggerRelationshipItem113,
    TriggerRelationshipItem114,
    TriggerRelationshipItem115,
    TriggerRelationshipItem116,
    TriggerRelationshipItem117,
    TriggerRelationshipItem118,
    TriggerRelationshipItem119,
    TriggerRelationshipItem120,
    TriggerRelationshipItem121,
    TriggerRelationshipItem122,
    TriggerRelationshipItem123,
    TriggerRelationshipItem124,
    TriggerRelationshipItem125,
    TriggerRelationshipItem126,
    TriggerRelationshipItem127,
    TriggerRelationshipItem128,
    TriggerRelationshipItem129,
    TriggerRelationshipItem130,
    TriggerRelationshipItem131,
    TriggerRelationshipItem132,
    TriggerRelationshipItem133,
    TriggerRelationshipItem134,
    TriggerRelationshipItem135,
    TriggerRelationshipItem136,
    TriggerRelationshipItem137,
    TriggerRelationshipItem138,
    TriggerRelationshipItem139,
    TriggerRelationshipItem140,
    TriggerRelationshipItem141,
    TriggerRelationshipItem142,
    TriggerRelationshipItem143,
    TriggerRelationshipItem144,
    TriggerRelationshipItem145,
    TriggerRelationshipItem146,
    TriggerRelationshipItem147,
    TriggerRelationshipItem148,
    TriggerRelationshipItem149,
    TriggerRelationshipItem150,
    TriggerRelationshipItem151,
    TriggerRelationshipItem152,
    TriggerRelationshipItem153,
    TriggerRelationshipItem154,
    TriggerRelationshipItem155,
    TriggerRelationshipItem156,
    TriggerRelationshipItem157,
    TriggerRelationshipItem158,
    TriggerRelationshipItem159,
    TriggerRelationshipItem160,
    TriggerRelationshipItem161,
    TriggerRelationshipItem162,
    TriggerRelationshipItem163,
    TriggerRelationshipItem164,
    TriggerRelationshipItem165,
    TriggerRelationshipItem166,
    TriggerRelationshipItem167,
    TriggerRelationshipItem168,
    TriggerRelationshipItem169,
    TriggerRelationshipItem170,
    TriggerRelationshipItem171,
    TriggerRelationshipItem172,
    TriggerRelationshipItem173,
    TriggerRelationshipItem174,
    TriggerRelationshipItem175,
    VariableReference,
)


class Type(Enum):
    TAG = "tag"


class TagType(Enum):
    SYNC = "sync"
    ASYNC_ = "async"


class ConsentType(Enum):
    NOT_REQUIRE_CONSENT = "not_require_consent"
    ANALYTICS = "analytics"
    AB_TESTING_AND_PERSONALIZATION = "ab_testing_and_personalization"
    CONVERSION_TRACKING = "conversion_tracking"
    MARKETING_AUTOMATION = "marketing_automation"
    REMARKETING = "remarketing"
    USER_FEEDBACK = "user_feedback"
    CUSTOM_CONSENT = "custom_consent"


class Template(Enum):
    ADROLL = "adroll"
    BING_ADS = "bing_ads"
    CRAZY_EGG = "crazy_egg"
    CUSTOM_CONTENT = "custom_content"
    CUSTOM_POPUP = "custom_popup"
    CUSTOM_TAG = "custom_tag"
    DOUBLECLICK_FLOODLIGHT = "doubleclick_floodlight"
    FACEBOOK_RETARGETING_PIXEL = "facebook_retargeting_pixel"
    GOOGLE_ANALYTICS = "google_analytics"
    HOT_JAR = "hot_jar"
    HUB_SPOT = "hub_spot"
    LINKEDIN = "linkedin"
    MARKETO = "marketo"
    MAUTIC = "mautic"
    PIWIK = "piwik"
    PIWIK_CUSTOM_DIMENSION = "piwik_custom_dimension"
    PIWIK_EVENT = "piwik_event"
    PIWIK_GOAL_CONVERSION = "piwik_goal_conversion"
    PIWIK_VIRTUAL_PAGE_VIEW = "piwik_virtual_page_view"
    QUALAROO = "qualaroo"
    SALES_MANAGO = "sales_manago"
    SALESFORCE_PARDOT = "salesforce_pardot"
    VIDEO_HTML5 = "video_html5"
    VIDEO_YOUTUBE = "video_youtube"
    HEATMAPS = "heatmaps"
    ABANDONED = "abandoned"
    ECOMMERCE_ORDER = "ecommerce_order"
    ECOMMERCE_ADD_TO_CART = "ecommerce_add_to_cart"
    ECOMMERCE_REMOVE_FROM_CART = "ecommerce_remove_from_cart"
    ECOMMERCE_PRODUCT_DETAIL_VIEW = "ecommerce_product_detail_view"
    ECOMMERCE_CART_UPDATE = "ecommerce_cart_update"
    COOKIE_INFORMATION_CMP_INTEGRATION = "cookie_information_cmp_integration"
    AB_TASTY = "ab_tasty"
    CLICK_TALE = "click_tale"
    GOOGLE_ADWORDS = "google_adwords"
    OPTIMIZELY = "optimizely"
    VISUAL_WEBSITE_OPTIMIZER = "visual_website_optimizer"


class Attributes(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
        json_schema_extra={"deprecated": True},
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class Field0ListResponseDatum(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Attributes = Field(..., description="Tag attributes")


class AttributesModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )


class Field0RequestDatum(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel = Field(..., description="Tag attributes")


class Scheduler(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    date_ranges: List[DateDefinition] = Field(..., description="Tag flight date definition", min_length=0)
    times_of_day: List[TimeDefinition] = Field(..., description="Tag flight time definition", min_length=0)


class AttributesModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")


class Triggers(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Relationships(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    triggers: Triggers = Field(..., description="Tag triggers")


class Field0RequestData(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel1 = Field(..., description="Custom tag attributes")
    relationships: Optional[Relationships] = None


class SchedulerModel(Scheduler):
    pass


class TargetElementId(RootModel[str]):
    root: str = Field(
        ...,
        description="Id of HTML element where custom content will be injected",
        min_length=1,
    )


class TemplateOptions(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    target_element_id: Union[TargetElementId, VariableReference] = Field(
        ..., description="Id of HTML element where custom content will be injected"
    )


class AttributesModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[SchedulerModel] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="ab_testing_and_personalization", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptions = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem1] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel2 = Field(..., description="Custom content attributes")
    relationships: Optional[Relationships] = None


class AttributesModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="ab_testing_and_personalization", description="Consent type")
    template: Template = Field(..., description="Tag template")


class TriggersModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem2] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel3 = Field(..., description="Custom popup attributes")
    relationships: Optional[Relationships] = None


class ContentTracking(Enum):
    TRACK_ALL_CONTENT_IMPRESSIONS = "trackAllContentImpressions"
    TRACK_VISIBLE_CONTENT_IMPRESSIONS = "trackVisibleContentImpressions"


class HeartBeatTimer(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    enabled: bool = Field(..., description="Enables accurate time measure")
    spent_time: Optional[int] = Field(
        default=None,
        description="Time spent on page threshold in seconds (is ignored and will be removed in next version)",
        ge=1,
    )


class UserId(RootModel[str]):
    root: str = Field(
        ...,
        description="User ID to connect together a given user's data collected from multiple sources",
        min_length=1,
    )


class CookieDomain(RootModel[str]):
    root: str = Field(..., description="Share the tracking cookie across subdomains", min_length=1)


class Name(RootModel[str]):
    root: str = Field(..., description="Custom variable name", max_length=255, min_length=1)


class Value(RootModel[str]):
    root: str = Field(..., description="Custom variable value", max_length=255, min_length=1)


class Scope(Enum):
    PAGE = "page"
    VISIT = "visit"


class PiwikCustomVariable(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom variable number", ge=1, le=20)
    name: Union[Name, VariableReference] = Field(..., description="Custom variable name")
    value: Union[int, float, bool, Value, VariableReference] = Field(..., description="Custom variable value")
    scope: Scope = Field(..., description="Custom variable scope")


class ValueModel(RootModel[str]):
    root: str = Field(..., description="Custom dimension value", max_length=255, min_length=1)


class PiwikCustomDimension(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    link_tracking: Optional[bool] = Field(default=True, description="Enables download and outlink tracking")
    content_tracking: Optional[ContentTracking] = Field(
        default=None,
        description="Track all or visible content impressions within a page",
    )
    cross_domain_tracking: Optional[bool] = Field(default=None, description="Enables cross domain tracking")
    heart_beat_timer: Optional[HeartBeatTimer] = Field(
        default=None, description="Accurately measure the time spent on each page"
    )
    user_id: Optional[Union[UserId, VariableReference]] = Field(
        default=None,
        description="User ID to connect together a given user's data collected from multiple sources",
    )
    cookie_domain: Optional[Union[CookieDomain, VariableReference]] = Field(
        default=None, description="Share the tracking cookie across subdomains"
    )
    disable_cookies: Optional[bool] = Field(
        default=None,
        description="Disables all first party cookies (is ignored and will be removed in next version). This setting is now reflected in privacyUseCookies attribute in App scope.",
    )
    secure_cookie: Optional[bool] = Field(
        default=None,
        description="Enable secure cookie flag on all first party cookies. This should be used when your website is only available under HTTPS so that all tracking cookies are always sent over secure connection.",
    )
    visitor_cookie_timeout: Optional[int] = Field(default=None, description="Visitor cookie timeout in seconds")
    referral_cookie_timeout: Optional[int] = Field(
        default=None,
        description="Referral cookie timeout in seconds (is ignored and will be removed in next version)",
    )
    session_cookie_timeout: Optional[int] = Field(default=None, description="Session cookie timeout in seconds")
    js_error_tracking: Optional[bool] = Field(default=True, description="Automatically track JavaScript errors")
    track_page_view: Optional[bool] = Field(default=True, description="Track page view")
    piwik_custom_variables: Optional[List[PiwikCustomVariable]] = Field(
        default=None, description="Custom variables", max_length=20, min_length=0
    )
    piwik_custom_dimensions: Optional[List[PiwikCustomDimension]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class AttributesModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="analytics", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem3] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel4 = Field(..., description="Piwik PRO tag attributes")
    relationships: Optional[Relationships] = None


class CustomDimension(PiwikCustomDimension):
    pass


class TemplateOptionsModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    custom_dimensions: List[CustomDimension] = Field(..., description="Custom dimensions", max_length=400, min_length=1)


class TriggersModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem4] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel4 = Field(..., description="Piwik PRO Custom Dimensions tag attributes")
    relationships: Optional[Relationships] = None


class Category(RootModel[str]):
    root: str = Field(..., description="Event category", min_length=1)


class Action(RootModel[str]):
    root: str = Field(..., description="Event action", min_length=1)


class NameModel(RootModel[str]):
    root: str = Field(..., description="Event name", min_length=1)


class CustomDimensionModel(PiwikCustomDimension):
    pass


class TemplateOptionsModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    category: Union[Category, VariableReference] = Field(..., description="Event category")
    action: Union[Action, VariableReference] = Field(..., description="Event action")
    name: Optional[Union[NameModel, VariableReference]] = Field(default=None, description="Event name")
    value: Optional[Union[float, int, VariableReference]] = Field(default=None, description="Event value")
    custom_dimensions: Optional[List[CustomDimensionModel]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem5] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel4 = Field(..., description="Piwik PRO Custom Event tag attributes")
    relationships: Optional[Relationships] = None


class Id(RootModel[str]):
    root: str = Field(..., description="Goal identifier", min_length=1)


class Revenue(RootModel[float]):
    root: float = Field(..., description="Goal revenue", ge=0.0)


class CustomDimensionModel1(PiwikCustomDimension):
    pass


class TemplateOptionsModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[Id, VariableReference] = Field(..., description="Goal identifier")
    revenue: Optional[Union[Revenue, VariableReference]] = Field(default=None, description="Goal revenue")
    custom_dimensions: Optional[List[CustomDimensionModel1]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel5(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem6] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel5(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel4 = Field(..., description="Piwik PRO Goal Conversion tag attributes")
    relationships: Optional[Relationships] = None


class Url(RootModel[str]):
    root: str = Field(
        ...,
        description="Page URL (for example: `https://example.org`, `/pages/about-us`)",
        min_length=1,
    )


class DocumentTitle(RootModel[str]):
    root: str = Field(..., description="Page title", min_length=1)


class CustomDimensionModel2(PiwikCustomDimension):
    pass


class TemplateOptionsModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    url: Union[Url, VariableReference] = Field(
        ...,
        description="Page URL (for example: `https://example.org`, `/pages/about-us`)",
    )
    document_title: Optional[Union[DocumentTitle, VariableReference]] = Field(default=None, description="Page title")
    custom_dimensions: Optional[List[CustomDimensionModel2]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel6(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem7] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel6(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel4 = Field(..., description="Piwik PRO Virtual Page View tag attributes")
    relationships: Optional[Relationships] = None


class AdvertiserId(RootModel[str]):
    root: str = Field(..., description="Advertiser id", min_length=1)


class PixelId(RootModel[str]):
    root: str = Field(..., description="Pixel id", min_length=1)


class ConversionValue(RootModel[float]):
    root: float = Field(..., description="Amount to count", ge=0.0)


class Currency(RootModel[str]):
    root: str = Field(
        ...,
        description="Conform to https://help.adroll.com/hc/en-us/articles/213429827",
        max_length=3,
        min_length=3,
    )


class ConversionData(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_value: Union[ConversionValue, VariableReference] = Field(..., description="Amount to count")
    currency: Union[Currency, VariableReference] = Field(
        ...,
        description="Conform to https://help.adroll.com/hc/en-us/articles/213429827",
    )


class TemplateOptionsModel5(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    advertiser_id: Union[AdvertiserId, VariableReference] = Field(..., description="Advertiser id")
    pixel_id: Union[PixelId, VariableReference] = Field(..., description="Pixel id")
    conversion_data: Optional[ConversionData] = Field(
        default=None,
        description="Conform to https://help.adroll.com/hc/en-us/articles/212629938-Enhanced-Conversion-Tracking",
    )


class AttributesModel5(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="remarketing", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel5 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel7(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem8] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel7(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel5 = Field(..., description="Adroll tag attributes")
    relationships: Optional[Relationships] = None


class IdModel(RootModel[str]):
    root: str = Field(..., description="Universal Event Tracking Tag id", min_length=1)


class TemplateOptionsModel6(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel, VariableReference] = Field(..., description="Universal Event Tracking Tag id")


class TriggersModel8(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem9] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel8(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel5 = Field(..., description="Bing Ads tag attributes")
    relationships: Optional[Relationships] = None


class AccountNumber(RootModel[str]):
    root: str = Field(..., description="Crazy Egg's account number", min_length=1)


class TemplateOptionsModel7(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_number: Union[AccountNumber, VariableReference] = Field(..., description="Crazy Egg's account number")


class AttributesModel6(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="analytics", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel7 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel9(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem10] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel9(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel6 = Field(..., description="Crazy Egg tag attributes")
    relationships: Optional[Relationships] = None


class Type11(Enum):
    DOUBLECLICK_FLOODLIGHT_SALES = "doubleclick_floodlight_sales"


class AdvertiserIdModel(RootModel[str]):
    root: str = Field(..., description="Advertiser identifier", min_length=1)


class GroupTagString(RootModel[str]):
    root: str = Field(..., description="Group tag", min_length=1)


class ActivityTagString(RootModel[str]):
    root: str = Field(..., description="Activity tag", min_length=1)


class CountingMethod(Enum):
    ITEM_SOLD = "item_sold"


class RevenueModel(RootModel[float]):
    root: float = Field(..., description="Revenue amount", ge=0.0)


class OrderId(RootModel[str]):
    root: str = Field(..., description="Order identifier", min_length=1)


class Quantity(RootModel[int]):
    root: int = Field(..., description="Number of items sold", ge=0)


class U(RootModel[str]):
    root: str = Field(..., description="Standard variable U", min_length=1)


class Tran(RootModel[str]):
    root: str = Field(..., description="Standard variable Tran", min_length=1)


class ValueModel1(RootModel[str]):
    root: str = Field(..., description="Variable value", min_length=1)


class CustomVariable(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Variable name `[u1, u2, ..., u100]`",
        pattern="^u([1-9][0-9]?|100)$",
    )
    value: Union[int, float, ValueModel1, VariableReference] = Field(..., description="Variable value")


class TemplateOptionsModel8(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethod = Field(..., description="Counting method")
    revenue: Union[RevenueModel, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    quantity: Union[Quantity, VariableReference] = Field(..., description="Number of items sold")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariable]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class AttributesModel7(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="remarketing", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel8 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel10(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem11] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel10(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel7 = Field(..., description="Floodlight Sales (item_sold) tag attributes")
    relationships: Optional[Relationships] = None


class CountingMethodModel(Enum):
    TRANSACTIONS = "transactions"


class CustomVariableModel(CustomVariable):
    pass


class TemplateOptionsModel9(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel = Field(..., description="Counting method")
    revenue: Union[RevenueModel, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel11(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem12] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel11(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel7 = Field(..., description="Floodlight Sales (transactions) tag attributes")
    relationships: Optional[Relationships] = None


class Type13Model(Enum):
    DOUBLECLICK_FLOODLIGHT_COUNTER = "doubleclick_floodlight_counter"


class CountingMethodModel1(Enum):
    SESSION = "session"


class SessionId(RootModel[str]):
    root: str = Field(..., description="Session identifier", min_length=1)


class CustomVariableModel1(CustomVariable):
    pass


class TemplateOptionsModel10(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel1 = Field(..., description="Counting method")
    session_id: Union[SessionId, VariableReference] = Field(..., description="Session identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel1]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel12(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem13] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel12(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel7 = Field(..., description="Floodlight Counter (session) tag attributes")
    relationships: Optional[Relationships] = None


class CountingMethodModel2(Enum):
    STANDARD_METHOD = "standard_method"


class CustomVariableModel2(CustomVariable):
    pass


class TemplateOptionsModel11(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel2 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel2]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel13(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem14] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel13(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel7 = Field(..., description="Floodlight Counter (standard_method) tag attributes")
    relationships: Optional[Relationships] = None


class CountingMethodModel3(Enum):
    UNIQUE_METHOD = "unique_method"


class CustomVariableModel3(CustomVariable):
    pass


class TemplateOptionsModel12(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel3 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel3]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel14(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem15] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel14(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel7 = Field(..., description="Floodlight Counter (unique_method) tag attributes")
    relationships: Optional[Relationships] = None


class PixelIdModel(RootModel[str]):
    root: str = Field(..., description="Pixel ID", min_length=1)


class Event(Enum):
    VIEW_CONTENT = "ViewContent"
    SEARCH = "Search"
    ADD_TO_CART = "AddToCart"
    ADD_TO_WISHLIST = "AddToWishlist"
    INITIATE_CHECKOUT = "InitiateCheckout"
    ADD_PAYMENT_INFO = "AddPaymentInfo"
    LEAD = "Lead"
    COMPLETE_REGISTRATION = "CompleteRegistration"
    SUBMIT_APPLICATION = "SubmitApplication"
    SCHEDULE = "Schedule"
    FIND_LOCATION = "FindLocation"
    DONATE = "Donate"
    CUSTOMIZE_PRODUCT = "CustomizeProduct"
    CONTACT = "Contact"
    PURCHASE = "Purchase"
    SUBSCRIBE = "Subscribe"
    START_TRIAL = "StartTrial"


class EventProperty(BaseModel):
    property_name: Optional[str] = Field(default=None, min_length=1)
    property_value: Optional[str] = None


class TemplateOptionsModel13(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pixel_id: Union[PixelIdModel, VariableReference] = Field(..., description="Pixel ID")
    event: Event
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to Facebook Ads Manager (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )
    event_properties: Optional[List[EventProperty]] = Field(default=None, description="Additional event parameters")


class TriggersModel15(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem16] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel15(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel7 = Field(..., description="Meta pixel tag attributes")
    relationships: Optional[Relationships] = None


class Type17(Enum):
    REMARKETING = "remarketing"


class ConversionId(RootModel[int]):
    root: int = Field(..., description="Conversion identifier", ge=0)


class TemplateOptionsModel14(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type17 = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to Google Ads (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )


class TriggersModel16(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem17] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel16(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel7 = Field(..., description="Google Ads Remarketing tag attributes")
    relationships: Optional[Relationships] = None


class Type18Model(Enum):
    CONVERSION_TRACKING = "conversion_tracking"


class ConversionLabel(RootModel[str]):
    root: str = Field(..., description="Conversion label", min_length=1)


class ConversionValueModel(RootModel[float]):
    root: float = Field(..., description="Conversion value", ge=0.0)


class ConversionTracking(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_label: Union[ConversionLabel, VariableReference] = Field(..., description="Conversion label")
    conversion_value: Optional[Union[ConversionValueModel, VariableReference]] = Field(
        default=None, description="Conversion value"
    )


class TemplateOptionsModel15(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type18Model = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTracking = Field(..., description="Conversion tracking definition")
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to Google Ads (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )


class AttributesModel8(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="conversion_tracking", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel15 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel17(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem18] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel17(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel8 = Field(..., description="Google Ads Tracking Conversion tag attributes")
    relationships: Optional[Relationships] = None


class IdModel1(RootModel[str]):
    root: str = Field(..., description="Tracking identifier", min_length=1)


class OptimizeId(RootModel[str]):
    root: str = Field(..., description="Optimize identifier", min_length=1)


class OptimizeSetup(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    optimize_id: Union[OptimizeId, VariableReference] = Field(..., description="Optimize identifier")
    flash_of_original_content: Optional[bool] = Field(
        default=False,
        description="Flag describing whether minimize flash of original content (`true`) or not (`false`)",
    )


class TemplateOptionsModel16(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel1, VariableReference] = Field(..., description="Tracking identifier")
    optimize_setup: Optional[OptimizeSetup] = Field(default=None, description="Google Optimize setup")


class AttributesModel9(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="analytics", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel16 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel18(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem19] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel18(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel9 = Field(..., description="Google Analytics tag attributes")
    relationships: Optional[Relationships] = None


class IdModel2(RootModel[str]):
    root: str = Field(..., description="Hotjar identifier", min_length=1)


class TemplateOptionsModel17(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel2, VariableReference] = Field(..., description="Hotjar identifier")


class TriggersModel19(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem20] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel19(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel9 = Field(..., description="Hotjar tag attributes")
    relationships: Optional[Relationships] = None


class IdModel3(RootModel[str]):
    root: str = Field(..., description="Hub identifier", min_length=1)


class TemplateOptionsModel18(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel3, VariableReference] = Field(..., description="Hub identifier")


class AttributesModel10(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="marketing_automation", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel18 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel20(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem21] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel20(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel10 = Field(..., description="HubSpot tag attributes")
    relationships: Optional[Relationships] = None


class IdModel4(RootModel[str]):
    root: str = Field(..., description="Partner identifier", min_length=1)


class TemplateOptionsModel19(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel4, VariableReference] = Field(..., description="Partner identifier")


class AttributesModel11(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="remarketing", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel19 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel21(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem22] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel21(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel11 = Field(..., description="LinkedIn tag attributes")
    relationships: Optional[Relationships] = None


class AccountId(RootModel[str]):
    root: str = Field(..., description="Munchkin account identifier", min_length=1)


class TemplateOptionsModel20(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountId, VariableReference] = Field(..., description="Munchkin account identifier")


class AttributesModel12(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="marketing_automation", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel20 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel22(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem23] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel22(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel12 = Field(..., description="Marketo tag attributes")
    relationships: Optional[Relationships] = None


class InstanceUrl(RootModel[str]):
    root: str = Field(
        ...,
        description="Mautic instance url (without `/mtc.js`, for example `https://example.org/mautic/`, `/mautic/`)",
        min_length=1,
    )


class TemplateOptionsModel21(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    instance_url: Union[InstanceUrl, VariableReference] = Field(
        ...,
        description="Mautic instance url (without `/mtc.js`, for example `https://example.org/mautic/`, `/mautic/`)",
    )


class TriggersModel23(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem24] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel23(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel12 = Field(..., description="Mautic tag attributes")
    relationships: Optional[Relationships] = None


class CustomerId(RootModel[str]):
    root: str = Field(..., description="Customer identifier", min_length=1)


class SiteToken(RootModel[str]):
    root: str = Field(..., description="Site token", min_length=1)


class TemplateOptionsModel22(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    customer_id: Union[CustomerId, VariableReference] = Field(..., description="Customer identifier")
    site_token: Union[SiteToken, VariableReference] = Field(..., description="Site token")


class AttributesModel13(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="user_feedback", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel22 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel24(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem25] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel24(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel13 = Field(..., description="Qualaroo tag attributes")
    relationships: Optional[Relationships] = None


class Smid(RootModel[str]):
    root: str = Field(..., description="SALESmanago identifier", min_length=1)


class TemplateOptionsModel23(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    smid: Union[Smid, VariableReference] = Field(..., description="SALESmanago identifier")


class AttributesModel14(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="marketing_automation", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel23 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel25(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem26] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel25(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel14 = Field(..., description="SALESmanago tag attributes")
    relationships: Optional[Relationships] = None


class PiAId(RootModel[str]):
    root: str = Field(..., description="Account identifier", min_length=1)


class PiCId(RootModel[str]):
    root: str = Field(..., description="Campaign identifier", min_length=1)


class TemplateOptionsModel24(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pi_a_id: Union[PiAId, VariableReference] = Field(..., description="Account identifier")
    pi_c_id: Union[PiCId, VariableReference] = Field(..., description="Campaign identifier")


class TriggersModel26(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem27] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel26(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel14 = Field(..., description="Salesforce Pardot tag attributes")
    relationships: Optional[Relationships] = None


class ElementSelector(RootModel[str]):
    root: str = Field(..., min_length=1)


class TrackThreshold(RootModel[int]):
    root: int = Field(..., description="Threshold", ge=0, le=100)


class TemplateOptionsModel25(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    element_selectors: Optional[List[ElementSelector]] = Field(
        default=None, description="Video element CSS selectors", min_length=1
    )
    title_attribute: Optional[Any] = Field(
        default=None,
        description="Used to store the name of the HTML attribute of the video element that you want to track as the custom event name",
    )
    track_thresholds: Optional[List[TrackThreshold]] = Field(
        default=None,
        description="Percentage thresholds that track how far a visitor viewed a video. All values passed must be unique and within [0 .. 100] range.",
        min_length=1,
    )
    volume_dimension_id: Optional[int] = Field(default=None, description="Custom dimension id", ge=1, le=400)


class AttributesModel15(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="analytics", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Optional[TemplateOptionsModel25] = Field(
        default=None, description="[Tag template options](#tag-template-options)"
    )


class TriggersModel27(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem28] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel27(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel15 = Field(..., description="Video HTML5 tag attributes")
    relationships: Optional[Relationships] = None


class TemplateOptionsModel26(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    track_thresholds: Optional[List[TrackThreshold]] = Field(
        default=None,
        description="Percentage thresholds that track how far a visitor viewed a video. All values passed must be unique and within [0 .. 100] range.",
        min_length=1,
    )


class TriggersModel28(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem29] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel28(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel15 = Field(..., description="Video YouTube tag attributes")
    relationships: Optional[Relationships] = None


class AttributesModel16(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="analytics", description="Consent type")
    template: Template = Field(..., description="Tag template")


class TriggersModel29(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem30] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel29(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel16 = Field(..., description="Heatmaps tag attributes")
    relationships: Optional[Relationships] = None


class AttributesModel17(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Optional[Dict[str, Any]] = Field(
        default=None, description="[Tag template options](#tag-template-options)"
    )


class TriggersModel30(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem31] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel30(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel17 = Field(..., description="Custom tag attributes")
    relationships: Optional[Relationships] = None


class ProductMapping(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    sku: str = Field(..., description="Object key with product SKU")
    name: Optional[str] = Field(default=None, description="Object key with product name")
    category: Optional[str] = Field(default=None, description="Object key with product category")
    price: Optional[str] = Field(default=None, description="Object key with product price")
    quantity: Optional[str] = Field(default=None, description="Object key with product quantity")
    brand: Optional[str] = Field(default=None, description="Object key with product brand")
    variant: Optional[str] = Field(default=None, description="Object key with product variant")


class CategoryMappingType(Enum):
    DISABLED = "disabled"
    SPLIT_BY_DELIMITER = "split_by_delimiter"
    USE_MAPPING = "use_mapping"


class CategoryMapping(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    category2: Optional[str] = Field(default=None, description="2nd category object key")
    category3: Optional[str] = Field(default=None, description="3rd category object key")
    category4: Optional[str] = Field(default=None, description="4th category object key")
    category5: Optional[str] = Field(default=None, description="5th category object key")


class Order(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    order_id: str = Field(..., description="Object key with order ID")
    grand_total: str = Field(..., description="Object key with grand total")
    subtotal: Optional[str] = Field(default=None, description="Object key with subtotal")
    tax: Optional[str] = Field(default=None, description="Object key with tax")
    shipping: Optional[str] = Field(default=None, description="Object key with shipping")
    discount: Optional[str] = Field(default=None, description="Object key with discount")


class ValueModel2(RootModel[str]):
    root: str = Field(..., description="Product dimension value", max_length=255, min_length=1)


class ProductDimension(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Product dimension number", ge=1, le=20)
    value: Union[int, float, bool, ValueModel2] = Field(..., description="Product dimension value")


class ValueModel3(ValueModel):
    pass


class CustomDimensionModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel3, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel27(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    order: Order = Field(..., description="Order details")
    product_dimensions: Optional[List[ProductDimension]] = Field(
        default=None, description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: Optional[List[CustomDimensionModel3]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class AttributesModel18(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel27


class TriggersModel31(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem32] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel31(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel18 = Field(..., description="Ecommerce Order attributes")
    relationships: Optional[Relationships] = None


class ValueModel4(ValueModel2):
    pass


class ValueModel5(ValueModel):
    pass


class CustomDimensionModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel5, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel28(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    product_dimensions: Optional[List[ProductDimension]] = Field(
        default=None, description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: Optional[List[CustomDimensionModel4]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel32(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem33] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel32(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel18 = Field(..., description="Ecommerce Add to cart attributes")
    relationships: Optional[Relationships] = None


class ValueModel6(ValueModel2):
    pass


class ValueModel7(ValueModel):
    pass


class CustomDimensionModel5(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel7, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel33(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem34] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel33(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel18 = Field(..., description="Ecommerce Remove from cart attributes")
    relationships: Optional[Relationships] = None


class ValueModel8(ValueModel2):
    pass


class ValueModel9(ValueModel):
    pass


class CustomDimensionModel6(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel9, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel34(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem35] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel34(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel18 = Field(..., description="Ecommerce Product detail view attributes")
    relationships: Optional[Relationships] = None


class ValueModel10(ValueModel2):
    pass


class ValueModel11(ValueModel):
    pass


class CustomDimensionModel7(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel11, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel29(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    grand_total: str = Field(..., description="Object key with grand total")
    product_dimensions: Optional[List[ProductDimension]] = Field(
        default=None, description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: Optional[List[CustomDimensionModel7]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel35(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem36] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel35(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel18 = Field(..., description="Ecommerce Cart update attributes")
    relationships: Optional[Relationships] = None


class CookieCatFunctionalEnum(Enum):
    ANALYTICS = "analytics"
    AB_TESTING_AND_PERSONALIZATION = "ab_testing_and_personalization"
    CONVERSION_TRACKING = "conversion_tracking"
    MARKETING_AUTOMATION = "marketing_automation"
    REMARKETING = "remarketing"
    USER_FEEDBACK = "user_feedback"
    CUSTOM_CONSENT = "custom_consent"


class ConsentsMapping(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    cookie_cat_functional: List[CookieCatFunctionalEnum] = Field(..., description="List of Piwik PRO consent types")
    cookie_cat_statistic: List[CookieCatFunctionalEnum] = Field(..., description="List of Piwik PRO consent types")
    cookie_cat_marketing: List[CookieCatFunctionalEnum] = Field(..., description="List of Piwik PRO consent types")
    cookie_cat_unclassified: List[CookieCatFunctionalEnum] = Field(..., description="List of Piwik PRO consent types")


class TemplateOptionsModel30(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    consents_mapping: ConsentsMapping = Field(..., description="Map Piwik PRO consents to Cookie Information consents")


class AttributesModel19(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="not_require_consent", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel30 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel36(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem37] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel36(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel19 = Field(..., description="Cookie Information CMP Integration tag attributes")
    relationships: Optional[Relationships] = None


class AttributesModel20(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")


class TriggersModel37(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem38] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel37(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel20 = Field(..., description="Custom tag attributes")
    relationships: Optional[Relationships] = None


class IdModel5(RootModel[str]):
    root: str = Field(..., description="Generic tag id", min_length=1)


class TemplateOptionsModel31(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel5, VariableReference] = Field(..., description="Generic tag id")


class AttributesModel21(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="ab_testing_and_personalization", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel31 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel38(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem39] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel38(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel21 = Field(..., description="A/B Tasty tag attributes")
    relationships: Optional[Relationships] = None


class Partition(RootModel[str]):
    root: str = Field(..., description="Partition number from server", min_length=1)


class Guid(RootModel[str]):
    root: str = Field(..., description="Tag identifier", min_length=1)


class TemplateOptionsModel32(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    partition: Union[Partition, VariableReference] = Field(..., description="Partition number from server")
    guid: Union[Guid, VariableReference] = Field(..., description="Tag identifier")


class AttributesModel22(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="analytics", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel32 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel39(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem40] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel39(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel22 = Field(..., description="Clicktale tag attributes")
    relationships: Optional[Relationships] = None


class Type41(Enum):
    DOUBLECLICK = "doubleclick"


class ConversionTrackingModel(ConversionTracking):
    pass


class TemplateOptionsModel33(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type41 = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTrackingModel = Field(..., description="Conversion tracking definition")
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to DoubleClick (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )


class AttributesModel23(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="conversion_tracking", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel33 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel40(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem41] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel40(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel23 = Field(..., description="DoubleClick Conversion tag attributes")
    relationships: Optional[Relationships] = None


class ProjectId(RootModel[str]):
    root: str = Field(..., description="Project identifier", min_length=1)


class TemplateOptionsModel34(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    project_id: Union[ProjectId, VariableReference] = Field(..., description="Project identifier")


class AttributesModel24(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=False,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=0,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=True,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default="ab_testing_and_personalization", description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel34 = Field(..., description="[Tag template options](#tag-template-options)")


class TriggersModel41(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem42] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel41(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel24 = Field(..., description="Optimizely tag attributes")
    relationships: Optional[Relationships] = None


class AccountIdModel(RootModel[str]):
    root: str = Field(..., description="VWO account identifier", min_length=1)


class TemplateOptionsModel35(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountIdModel, VariableReference] = Field(..., description="VWO account identifier")


class TriggersModel42(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem43] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel42(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel24 = Field(..., description="Visual Website Optimizer tag attributes")
    relationships: Optional[Relationships] = None


class AttributesModel25(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel43(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem44] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseData(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel25 = Field(..., description="Custom tag attributes")
    relationships: Relationships


class TemplateOptionsModel36(TemplateOptions):
    pass


class AttributesModel26(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel36 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel44(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem45] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel26 = Field(..., description="Custom content attributes")
    relationships: Relationships


class AttributesModel27(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel45(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem46] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel27 = Field(..., description="Custom popup attributes")
    relationships: Relationships


class DocumentWrite(Enum):
    BOOLEAN_FALSE = False


class NameModel1(Name):
    pass


class ValueModel12(Value):
    pass


class PiwikCustomVariableModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom variable number", ge=1, le=20)
    name: Union[NameModel1, VariableReference] = Field(..., description="Custom variable name")
    value: Union[int, float, bool, ValueModel12, VariableReference] = Field(..., description="Custom variable value")
    scope: Scope = Field(..., description="Custom variable scope")


class ValueModel13(ValueModel):
    pass


class PiwikCustomDimensionModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel13, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel37(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    link_tracking: bool = Field(..., description="Enables download and outlink tracking")
    content_tracking: Optional[ContentTracking] = Field(
        default=None,
        description="Track all or visible content impressions within a page",
    )
    cross_domain_tracking: Optional[bool] = Field(default=None, description="Enables cross domain tracking")
    heart_beat_timer: Optional[HeartBeatTimer] = Field(
        default=None, description="Accurately measure the time spent on each page"
    )
    user_id: Optional[Union[UserId, VariableReference]] = Field(
        default=None,
        description="User ID to connect together a given user's data collected from multiple sources",
    )
    cookie_domain: Optional[Union[CookieDomain, VariableReference]] = Field(
        default=None, description="Share the tracking cookie across subdomains"
    )
    disable_cookies: Optional[bool] = Field(
        default=None,
        description="Disables all first party cookies (is ignored and will be removed in next version). This setting is now reflected in privacyUseCookies attribute in App scope.",
    )
    secure_cookie: Optional[bool] = Field(
        default=None,
        description="Enable secure cookie flag on all first party cookies. This should be used when your website is only available under HTTPS so that all tracking cookies are always sent over secure connection.",
    )
    visitor_cookie_timeout: Optional[int] = Field(default=None, description="Visitor cookie timeout in seconds")
    referral_cookie_timeout: Optional[int] = Field(
        default=None,
        description="Referral cookie timeout in seconds (is ignored and will be removed in next version)",
    )
    session_cookie_timeout: Optional[int] = Field(default=None, description="Session cookie timeout in seconds")
    js_error_tracking: bool = Field(..., description="Automatically track JavaScript errors")
    track_page_view: bool = Field(..., description="Track page view")
    piwik_custom_variables: Optional[List[PiwikCustomVariableModel]] = Field(
        default=None, description="Custom variables", max_length=20, min_length=0
    )
    piwik_custom_dimensions: List[PiwikCustomDimensionModel] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )
    tracker_domains: List[str] = Field(..., description="Tracker domains")
    tracker_php_url: str = Field(..., description="Tracker PHP url")
    tracker_js_url: str = Field(..., description="Tracker JS url")
    tracker_site_id: str = Field(
        ...,
        description="Tracker site ID",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )


class AttributesModel28(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel37 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel46(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem47] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Piwik PRO tag attributes")
    relationships: Relationships


class CustomDimensionModel8(PiwikCustomDimensionModel):
    pass


class TemplateOptionsModel38(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    custom_dimensions: List[CustomDimensionModel8] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=1
    )


class TriggersModel47(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem48] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Piwik PRO Custom Dimensions tag attributes")
    relationships: Relationships


class NameModel2(NameModel):
    pass


class CustomDimensionModel9(PiwikCustomDimensionModel):
    pass


class TemplateOptionsModel39(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    category: Union[Category, VariableReference] = Field(..., description="Event category")
    action: Union[Action, VariableReference] = Field(..., description="Event action")
    name: Optional[Union[NameModel2, VariableReference]] = Field(default=None, description="Event name")
    value: Optional[Union[float, int, VariableReference]] = Field(default=None, description="Event value")
    custom_dimensions: List[CustomDimensionModel9] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel48(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem49] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Piwik PRO Custom Event tag attributes")
    relationships: Relationships


class IdModel6(Id):
    pass


class RevenueModel1(Revenue):
    pass


class CustomDimensionModel10(PiwikCustomDimensionModel):
    pass


class TemplateOptionsModel40(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel6, VariableReference] = Field(..., description="Goal identifier")
    revenue: Optional[Union[RevenueModel1, VariableReference]] = Field(default=None, description="Goal revenue")
    custom_dimensions: List[CustomDimensionModel10] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel49(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem50] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel5(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Piwik PRO Goal Conversion tag attributes")
    relationships: Relationships


class CustomDimensionModel11(PiwikCustomDimensionModel):
    pass


class TemplateOptionsModel41(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    url: Union[Url, VariableReference] = Field(
        ...,
        description="Page URL (for example: `https://example.org`, `/pages/about-us`)",
    )
    document_title: Optional[Union[DocumentTitle, VariableReference]] = Field(default=None, description="Page title")
    custom_dimensions: List[CustomDimensionModel11] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel50(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem51] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel6(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Piwik PRO Virtual Page View tag attributes")
    relationships: Relationships


class AdvertiserIdModel1(AdvertiserId):
    pass


class PixelIdModel1(PixelId):
    pass


class ConversionValueModel1(ConversionValue):
    pass


class ConversionDataModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_value: Union[ConversionValueModel1, VariableReference] = Field(..., description="Amount to count")
    currency: Union[Currency, VariableReference] = Field(
        ...,
        description="Conform to https://help.adroll.com/hc/en-us/articles/213429827",
    )


class TemplateOptionsModel42(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    advertiser_id: Union[AdvertiserIdModel1, VariableReference] = Field(..., description="Advertiser id")
    pixel_id: Union[PixelIdModel1, VariableReference] = Field(..., description="Pixel id")
    conversion_data: Optional[ConversionDataModel] = Field(
        default=None,
        description="Conform to https://help.adroll.com/hc/en-us/articles/212629938-Enhanced-Conversion-Tracking",
    )


class TriggersModel51(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem52] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel7(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Adroll tag attributes")
    relationships: Relationships


class IdModel7(IdModel):
    pass


class TemplateOptionsModel43(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel7, VariableReference] = Field(..., description="Universal Event Tracking Tag id")


class TriggersModel52(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem53] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel8(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Bing Ads tag attributes")
    relationships: Relationships


class TemplateOptionsModel44(TemplateOptionsModel7):
    pass


class TriggersModel53(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem54] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel9(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Crazy Egg tag attributes")
    relationships: Relationships


class DocumentWriteModel(Enum):
    BOOLEAN_TRUE = True


class AdvertiserIdModel2(AdvertiserIdModel):
    pass


class RevenueModel2(RevenueModel):
    pass


class ValueModel14(ValueModel1):
    pass


class CustomVariableModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Variable name `[u1, u2, ..., u100]`",
        pattern="^u([1-9][0-9]?|100)$",
    )
    value: Union[int, float, ValueModel14, VariableReference] = Field(..., description="Variable value")


class TemplateOptionsModel45(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel2, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethod = Field(..., description="Counting method")
    revenue: Union[RevenueModel2, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    quantity: Union[Quantity, VariableReference] = Field(..., description="Number of items sold")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel4]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel54(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem55] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel10(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Floodlight Sales (item_sold) tag attributes")
    relationships: Relationships


class CustomVariableModel5(CustomVariableModel4):
    pass


class TemplateOptionsModel46(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel2, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel = Field(..., description="Counting method")
    revenue: Union[RevenueModel2, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel5]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel55(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem56] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel11(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Floodlight Sales (transactions) tag attributes")
    relationships: Relationships


class CustomVariableModel6(CustomVariableModel4):
    pass


class TemplateOptionsModel47(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel2, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel1 = Field(..., description="Counting method")
    session_id: Union[SessionId, VariableReference] = Field(..., description="Session identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel6]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel56(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem57] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel12(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Floodlight Counter (session) tag attributes")
    relationships: Relationships


class CustomVariableModel7(CustomVariableModel4):
    pass


class TemplateOptionsModel48(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel2, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel2 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel7]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel57(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem58] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel13(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Floodlight Counter (standard_method) tag attributes")
    relationships: Relationships


class CustomVariableModel8(CustomVariableModel4):
    pass


class TemplateOptionsModel49(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel2, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel3 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel8]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel58(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem59] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel14(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Floodlight Counter (unique_method) tag attributes")
    relationships: Relationships


class PixelIdModel2(PixelIdModel):
    pass


class TemplateOptionsModel50(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pixel_id: Union[PixelIdModel2, VariableReference] = Field(..., description="Pixel ID")
    event: Event
    event_properties: List[EventProperty] = Field(..., description="Additional event parameters")


class TriggersModel59(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem60] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel15(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Meta pixel tag attributes")
    relationships: Relationships


class TemplateOptionsModel51(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type17 = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")


class TriggersModel60(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem61] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel16(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Google Ads Remarketing tag attributes")
    relationships: Relationships


class ConversionValueModel2(ConversionValueModel):
    pass


class ConversionTrackingModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_label: Union[ConversionLabel, VariableReference] = Field(..., description="Conversion label")
    conversion_value: Optional[Union[ConversionValueModel2, VariableReference]] = Field(
        default=None, description="Conversion value"
    )


class TemplateOptionsModel52(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type18Model = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTrackingModel1 = Field(..., description="Conversion tracking definition")


class TriggersModel61(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem62] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel17(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Google Ads Tracking Conversion tag attributes")
    relationships: Relationships


class IdModel8(IdModel1):
    pass


class OptimizeSetupModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    optimize_id: Union[OptimizeId, VariableReference] = Field(..., description="Optimize identifier")
    flash_of_original_content: bool = Field(
        ...,
        description="Flag describing whether minimize flash of original content (`true`) or not (`false`)",
    )


class TemplateOptionsModel53(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel8, VariableReference] = Field(..., description="Tracking identifier")
    optimize_setup: Optional[OptimizeSetupModel] = Field(default=None, description="Google Optimize setup")


class TriggersModel62(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem63] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel18(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Google Analytics tag attributes")
    relationships: Relationships


class IdModel9(IdModel2):
    pass


class TemplateOptionsModel54(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel9, VariableReference] = Field(..., description="Hotjar identifier")


class TriggersModel63(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem64] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel19(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Hotjar tag attributes")
    relationships: Relationships


class IdModel10(IdModel3):
    pass


class TemplateOptionsModel55(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel10, VariableReference] = Field(..., description="Hub identifier")


class TriggersModel64(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem65] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel20(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="HubSpot tag attributes")
    relationships: Relationships


class IdModel11(IdModel4):
    pass


class TemplateOptionsModel56(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel11, VariableReference] = Field(..., description="Partner identifier")


class TriggersModel65(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem66] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel21(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="LinkedIn tag attributes")
    relationships: Relationships


class AccountIdModel1(AccountId):
    pass


class TemplateOptionsModel57(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountIdModel1, VariableReference] = Field(..., description="Munchkin account identifier")


class TriggersModel66(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem67] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel22(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Marketo tag attributes")
    relationships: Relationships


class TemplateOptionsModel58(TemplateOptionsModel21):
    pass


class TriggersModel67(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem68] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel23(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Mautic tag attributes")
    relationships: Relationships


class TemplateOptionsModel59(TemplateOptionsModel22):
    pass


class TriggersModel68(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem69] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel24(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Qualaroo tag attributes")
    relationships: Relationships


class TemplateOptionsModel60(TemplateOptionsModel23):
    pass


class TriggersModel69(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem70] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel25(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="SALESmanago tag attributes")
    relationships: Relationships


class TemplateOptionsModel61(TemplateOptionsModel24):
    pass


class TriggersModel70(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem71] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel26(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Salesforce Pardot tag attributes")
    relationships: Relationships


class TemplateOptionsModel62(TemplateOptionsModel25):
    pass


class TriggersModel71(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem72] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel27(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Video HTML5 tag attributes")
    relationships: Relationships


class TemplateOptionsModel63(TemplateOptionsModel26):
    pass


class TriggersModel72(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem73] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel28(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel28 = Field(..., description="Video YouTube tag attributes")
    relationships: Relationships


class AttributesModel29(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel73(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem74] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel29(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel29 = Field(..., description="Heatmaps tag attributes")
    relationships: Relationships


class TriggersModel74(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem75] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel30(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel29 = Field(..., description="Abandoned tag attributes")
    relationships: Relationships


class ValueModel15(ValueModel2):
    pass


class ValueModel16(ValueModel):
    pass


class CustomDimensionModel12(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel16, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel64(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    order: Order = Field(..., description="Order details")
    product_dimensions: List[ProductDimension] = Field(
        ..., description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: List[CustomDimensionModel12] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class AttributesModel30(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel64
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel75(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem76] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel31(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel30 = Field(..., description="Ecommerce Order attributes")
    relationships: Relationships


class ValueModel17(ValueModel2):
    pass


class ValueModel18(ValueModel):
    pass


class CustomDimensionModel13(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel18, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel65(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    product_dimensions: List[ProductDimension] = Field(
        ..., description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: List[CustomDimensionModel13] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel76(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem77] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel32(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel30 = Field(..., description="Ecommerce Add to cart attributes")
    relationships: Relationships


class ValueModel19(ValueModel2):
    pass


class ValueModel20(ValueModel):
    pass


class CustomDimensionModel14(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel20, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel77(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem78] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel33(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel30 = Field(..., description="Ecommerce Remove from cart attributes")
    relationships: Relationships


class ValueModel21(ValueModel2):
    pass


class ValueModel22(ValueModel):
    pass


class CustomDimensionModel15(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel22, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel78(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem79] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel34(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel30 = Field(..., description="Ecommerce Product detail view attributes")
    relationships: Relationships


class ValueModel23(ValueModel2):
    pass


class ValueModel24(ValueModel):
    pass


class CustomDimensionModel16(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel24, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel66(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    grand_total: str = Field(..., description="Object key with grand total")
    product_dimensions: List[ProductDimension] = Field(
        ..., description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: List[CustomDimensionModel16] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel79(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem80] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel35(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel30 = Field(..., description="Ecommerce Cart update attributes")
    relationships: Relationships


class TemplateOptionsModel67(TemplateOptionsModel30):
    pass


class AttributesModel31(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel67 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel80(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem81] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel36(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel31 = Field(..., description="Cookie Information CMP Integration tag attributes")
    relationships: Relationships


class AttributesModel32(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel81(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem82] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel37(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel32 = Field(..., description="Custom tag attributes")
    relationships: Relationships


class IdModel12(IdModel5):
    pass


class TemplateOptionsModel68(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel12, VariableReference] = Field(..., description="Generic tag id")


class AttributesModel33(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel68 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel82(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem83] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel38(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel33 = Field(..., description="A/B Tasty tag attributes")
    relationships: Relationships


class TemplateOptionsModel69(TemplateOptionsModel32):
    pass


class TriggersModel83(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem84] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel39(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel33 = Field(..., description="Clicktale tag attributes")
    relationships: Relationships


class ConversionTrackingModel2(ConversionTrackingModel1):
    pass


class TemplateOptionsModel70(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type41 = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTrackingModel2 = Field(..., description="Conversion tracking definition")
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to DoubleClick (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )


class TriggersModel84(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem85] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel40(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel33 = Field(..., description="DoubleClick Conversion tag attributes")
    relationships: Relationships


class TemplateOptionsModel71(TemplateOptionsModel34):
    pass


class TriggersModel85(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem86] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel41(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel33 = Field(..., description="Optimizely tag attributes")
    relationships: Relationships


class AccountIdModel2(AccountIdModel):
    pass


class TemplateOptionsModel72(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountIdModel2, VariableReference] = Field(..., description="VWO account identifier")


class TriggersModel86(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem87] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel42(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel33 = Field(..., description="Visual Website Optimizer tag attributes")
    relationships: Relationships


class Type88(Enum):
    TRIGGER = "trigger"


class Meta(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    has_abandoned_conditions: bool = Field(
        ...,
        description="Flag describing whether trigger has abandoned conditions (true), otherwise (false)",
    )
    has_conditions_with_abandoned_variable: bool = Field(
        ...,
        description="Flag describing whether trigger has condition with abandoned variable (true), otherwise (false)",
    )


class TriggerType(Enum):
    PAGE_VIEW = "page_view"
    PAGE_LOAD = "page_load"
    DOM_READY = "dom_ready"
    LEAVE_CONTENT = "leave_content"
    PAGE_SCROLL = "page_scroll"
    TIME_ON_WEBSITE = "time_on_website"
    EVENT = "event"
    HISTORY = "history"
    DEBOUNCED_HISTORY = "debounced_history"
    FORM_SUBMISSION = "form_submission"
    CLICK = "click"
    CAPTURING_CLICK = "capturing_click"
    ELEMENT_PRESENCE = "element_presence"
    CDP_AUDIENCE_DETECTION = "cdp_audience_detection"
    ABANDONED = "abandoned"


class AttributesModel34(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: str = Field(..., description="Trigger name", max_length=255, min_length=1)
    trigger_type: TriggerType = Field(..., description="Trigger type")
    is_published: bool = Field(
        ...,
        description="Flag describing whether trigger is published (true) or not published (false)",
    )
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class Field0ListResponseDatumModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Trigger identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type88 = Field(..., description="Trigger resource type")
    meta: Meta = Field(..., description="Trigger meta data")
    attributes: AttributesModel34 = Field(..., description="Trigger attributes")


class AttributesModel35(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel87(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem88] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel43(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel35 = Field(..., description="Custom tag attributes")
    relationships: Relationships


class TemplateOptionsModel73(TemplateOptions):
    pass


class AttributesModel36(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel73 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel88(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem89] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel44(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel36 = Field(..., description="Custom content attributes")
    relationships: Relationships


class AttributesModel37(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel89(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem90] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel45(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel37 = Field(..., description="Custom popup attributes")
    relationships: Relationships


class NameModel3(Name):
    pass


class ValueModel25(Value):
    pass


class PiwikCustomVariableModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom variable number", ge=1, le=20)
    name: Union[NameModel3, VariableReference] = Field(..., description="Custom variable name")
    value: Union[int, float, bool, ValueModel25, VariableReference] = Field(..., description="Custom variable value")
    scope: Scope = Field(..., description="Custom variable scope")


class ValueModel26(ValueModel):
    pass


class PiwikCustomDimensionModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel26, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel74(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    link_tracking: bool = Field(..., description="Enables download and outlink tracking")
    content_tracking: Optional[ContentTracking] = Field(
        default=None,
        description="Track all or visible content impressions within a page",
    )
    cross_domain_tracking: Optional[bool] = Field(default=None, description="Enables cross domain tracking")
    heart_beat_timer: Optional[HeartBeatTimer] = Field(
        default=None, description="Accurately measure the time spent on each page"
    )
    user_id: Optional[Union[UserId, VariableReference]] = Field(
        default=None,
        description="User ID to connect together a given user's data collected from multiple sources",
    )
    cookie_domain: Optional[Union[CookieDomain, VariableReference]] = Field(
        default=None, description="Share the tracking cookie across subdomains"
    )
    disable_cookies: Optional[bool] = Field(
        default=None,
        description="Disables all first party cookies (is ignored and will be removed in next version). This setting is now reflected in privacyUseCookies attribute in App scope.",
    )
    secure_cookie: Optional[bool] = Field(
        default=None,
        description="Enable secure cookie flag on all first party cookies. This should be used when your website is only available under HTTPS so that all tracking cookies are always sent over secure connection.",
    )
    visitor_cookie_timeout: Optional[int] = Field(default=None, description="Visitor cookie timeout in seconds")
    referral_cookie_timeout: Optional[int] = Field(
        default=None,
        description="Referral cookie timeout in seconds (is ignored and will be removed in next version)",
    )
    session_cookie_timeout: Optional[int] = Field(default=None, description="Session cookie timeout in seconds")
    js_error_tracking: bool = Field(..., description="Automatically track JavaScript errors")
    track_page_view: bool = Field(..., description="Track page view")
    piwik_custom_variables: Optional[List[PiwikCustomVariableModel1]] = Field(
        default=None, description="Custom variables", max_length=20, min_length=0
    )
    piwik_custom_dimensions: List[PiwikCustomDimensionModel1] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )
    tracker_domains: List[str] = Field(..., description="Tracker domains")
    tracker_php_url: str = Field(..., description="Tracker PHP url")
    tracker_js_url: str = Field(..., description="Tracker JS url")
    tracker_site_id: str = Field(
        ...,
        description="Tracker site ID",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )


class AttributesModel38(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel74 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel90(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem91] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel46(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Piwik PRO tag attributes")
    relationships: Relationships


class CustomDimensionModel17(PiwikCustomDimensionModel1):
    pass


class TemplateOptionsModel75(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    custom_dimensions: List[CustomDimensionModel17] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=1
    )


class TriggersModel91(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem92] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel47(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Piwik PRO Custom Dimensions tag attributes")
    relationships: Relationships


class NameModel4(NameModel):
    pass


class CustomDimensionModel18(PiwikCustomDimensionModel1):
    pass


class TemplateOptionsModel76(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    category: Union[Category, VariableReference] = Field(..., description="Event category")
    action: Union[Action, VariableReference] = Field(..., description="Event action")
    name: Optional[Union[NameModel4, VariableReference]] = Field(default=None, description="Event name")
    value: Optional[Union[float, int, VariableReference]] = Field(default=None, description="Event value")
    custom_dimensions: List[CustomDimensionModel18] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel92(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem93] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel48(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Piwik PRO Custom Event tag attributes")
    relationships: Relationships


class IdModel13(Id):
    pass


class RevenueModel3(Revenue):
    pass


class CustomDimensionModel19(PiwikCustomDimensionModel1):
    pass


class TemplateOptionsModel77(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel13, VariableReference] = Field(..., description="Goal identifier")
    revenue: Optional[Union[RevenueModel3, VariableReference]] = Field(default=None, description="Goal revenue")
    custom_dimensions: List[CustomDimensionModel19] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel93(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem94] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel49(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Piwik PRO Goal Conversion tag attributes")
    relationships: Relationships


class CustomDimensionModel20(PiwikCustomDimensionModel1):
    pass


class TemplateOptionsModel78(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    url: Union[Url, VariableReference] = Field(
        ...,
        description="Page URL (for example: `https://example.org`, `/pages/about-us`)",
    )
    document_title: Optional[Union[DocumentTitle, VariableReference]] = Field(default=None, description="Page title")
    custom_dimensions: List[CustomDimensionModel20] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel94(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem95] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel50(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Piwik PRO Virtual Page View tag attributes")
    relationships: Relationships


class AdvertiserIdModel3(AdvertiserId):
    pass


class PixelIdModel3(PixelId):
    pass


class ConversionValueModel3(ConversionValue):
    pass


class ConversionDataModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_value: Union[ConversionValueModel3, VariableReference] = Field(..., description="Amount to count")
    currency: Union[Currency, VariableReference] = Field(
        ...,
        description="Conform to https://help.adroll.com/hc/en-us/articles/213429827",
    )


class TemplateOptionsModel79(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    advertiser_id: Union[AdvertiserIdModel3, VariableReference] = Field(..., description="Advertiser id")
    pixel_id: Union[PixelIdModel3, VariableReference] = Field(..., description="Pixel id")
    conversion_data: Optional[ConversionDataModel1] = Field(
        default=None,
        description="Conform to https://help.adroll.com/hc/en-us/articles/212629938-Enhanced-Conversion-Tracking",
    )


class TriggersModel95(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem96] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel51(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Adroll tag attributes")
    relationships: Relationships


class IdModel14(IdModel):
    pass


class TemplateOptionsModel80(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel14, VariableReference] = Field(..., description="Universal Event Tracking Tag id")


class TriggersModel96(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem97] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel52(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Bing Ads tag attributes")
    relationships: Relationships


class TemplateOptionsModel81(TemplateOptionsModel7):
    pass


class TriggersModel97(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem98] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel53(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Crazy Egg tag attributes")
    relationships: Relationships


class AdvertiserIdModel4(AdvertiserIdModel):
    pass


class RevenueModel4(RevenueModel):
    pass


class ValueModel27(ValueModel1):
    pass


class CustomVariableModel9(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Variable name `[u1, u2, ..., u100]`",
        pattern="^u([1-9][0-9]?|100)$",
    )
    value: Union[int, float, ValueModel27, VariableReference] = Field(..., description="Variable value")


class TemplateOptionsModel82(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel4, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethod = Field(..., description="Counting method")
    revenue: Union[RevenueModel4, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    quantity: Union[Quantity, VariableReference] = Field(..., description="Number of items sold")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel9]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel98(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem99] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel54(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Floodlight Sales (item_sold) tag attributes")
    relationships: Relationships


class CustomVariableModel10(CustomVariableModel9):
    pass


class TemplateOptionsModel83(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel4, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel = Field(..., description="Counting method")
    revenue: Union[RevenueModel4, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel10]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel99(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem100] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel55(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Floodlight Sales (transactions) tag attributes")
    relationships: Relationships


class CustomVariableModel11(CustomVariableModel9):
    pass


class TemplateOptionsModel84(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel4, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel1 = Field(..., description="Counting method")
    session_id: Union[SessionId, VariableReference] = Field(..., description="Session identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel11]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel100(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem101] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel56(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Floodlight Counter (session) tag attributes")
    relationships: Relationships


class CustomVariableModel12(CustomVariableModel9):
    pass


class TemplateOptionsModel85(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel4, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel2 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel12]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel101(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem102] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel57(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Floodlight Counter (standard_method) tag attributes")
    relationships: Relationships


class CustomVariableModel13(CustomVariableModel9):
    pass


class TemplateOptionsModel86(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel4, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel3 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel13]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel102(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem103] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel58(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Floodlight Counter (unique_method) tag attributes")
    relationships: Relationships


class PixelIdModel4(PixelIdModel):
    pass


class TemplateOptionsModel87(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pixel_id: Union[PixelIdModel4, VariableReference] = Field(..., description="Pixel ID")
    event: Event
    event_properties: List[EventProperty] = Field(..., description="Additional event parameters")


class TriggersModel103(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem104] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel59(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Meta pixel tag attributes")
    relationships: Relationships


class TemplateOptionsModel88(TemplateOptionsModel51):
    pass


class TriggersModel104(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem105] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel60(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Google Ads Remarketing tag attributes")
    relationships: Relationships


class ConversionValueModel4(ConversionValueModel):
    pass


class ConversionTrackingModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_label: Union[ConversionLabel, VariableReference] = Field(..., description="Conversion label")
    conversion_value: Optional[Union[ConversionValueModel4, VariableReference]] = Field(
        default=None, description="Conversion value"
    )


class TemplateOptionsModel89(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type18Model = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTrackingModel3 = Field(..., description="Conversion tracking definition")


class TriggersModel105(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem106] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel61(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Google Ads Tracking Conversion tag attributes")
    relationships: Relationships


class IdModel15(IdModel1):
    pass


class OptimizeSetupModel1(OptimizeSetupModel):
    pass


class TemplateOptionsModel90(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel15, VariableReference] = Field(..., description="Tracking identifier")
    optimize_setup: Optional[OptimizeSetupModel1] = Field(default=None, description="Google Optimize setup")


class TriggersModel106(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem107] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel62(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Google Analytics tag attributes")
    relationships: Relationships


class IdModel16(IdModel2):
    pass


class TemplateOptionsModel91(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel16, VariableReference] = Field(..., description="Hotjar identifier")


class TriggersModel107(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem108] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel63(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Hotjar tag attributes")
    relationships: Relationships


class IdModel17(IdModel3):
    pass


class TemplateOptionsModel92(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel17, VariableReference] = Field(..., description="Hub identifier")


class TriggersModel108(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem109] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel64(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="HubSpot tag attributes")
    relationships: Relationships


class IdModel18(IdModel4):
    pass


class TemplateOptionsModel93(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel18, VariableReference] = Field(..., description="Partner identifier")


class TriggersModel109(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem110] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel65(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="LinkedIn tag attributes")
    relationships: Relationships


class AccountIdModel3(AccountId):
    pass


class TemplateOptionsModel94(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountIdModel3, VariableReference] = Field(..., description="Munchkin account identifier")


class TriggersModel110(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem111] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel66(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Marketo tag attributes")
    relationships: Relationships


class TemplateOptionsModel95(TemplateOptionsModel21):
    pass


class TriggersModel111(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem112] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel67(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Mautic tag attributes")
    relationships: Relationships


class TemplateOptionsModel96(TemplateOptionsModel22):
    pass


class TriggersModel112(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem113] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel68(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Qualaroo tag attributes")
    relationships: Relationships


class TemplateOptionsModel97(TemplateOptionsModel23):
    pass


class TriggersModel113(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem114] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel69(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="SALESmanago tag attributes")
    relationships: Relationships


class TemplateOptionsModel98(TemplateOptionsModel24):
    pass


class TriggersModel114(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem115] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel70(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Salesforce Pardot tag attributes")
    relationships: Relationships


class TemplateOptionsModel99(TemplateOptionsModel25):
    pass


class TriggersModel115(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem116] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel71(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Video HTML5 tag attributes")
    relationships: Relationships


class TemplateOptionsModel100(TemplateOptionsModel26):
    pass


class TriggersModel116(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem117] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel72(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel38 = Field(..., description="Video YouTube tag attributes")
    relationships: Relationships


class AttributesModel39(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel117(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem118] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel73(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel39 = Field(..., description="Heatmaps tag attributes")
    relationships: Relationships


class TriggersModel118(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem119] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel74(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel39 = Field(..., description="Abandoned tag attributes")
    relationships: Relationships


class ValueModel28(ValueModel2):
    pass


class ValueModel29(ValueModel):
    pass


class CustomDimensionModel21(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel29, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel101(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    order: Order = Field(..., description="Order details")
    product_dimensions: List[ProductDimension] = Field(
        ..., description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: List[CustomDimensionModel21] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class AttributesModel40(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: bool = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel101
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel119(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem120] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel75(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel40 = Field(..., description="Ecommerce Order attributes")
    relationships: Relationships


class ValueModel30(ValueModel2):
    pass


class ValueModel31(ValueModel):
    pass


class CustomDimensionModel22(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel31, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel102(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    product_dimensions: List[ProductDimension] = Field(
        ..., description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: List[CustomDimensionModel22] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel120(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem121] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel76(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel40 = Field(..., description="Ecommerce Add to cart attributes")
    relationships: Relationships


class ValueModel32(ValueModel2):
    pass


class ValueModel33(ValueModel):
    pass


class CustomDimensionModel23(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel33, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel121(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem122] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel77(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel40 = Field(..., description="Ecommerce Remove from cart attributes")
    relationships: Relationships


class ValueModel34(ValueModel2):
    pass


class ValueModel35(ValueModel):
    pass


class CustomDimensionModel24(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel35, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel122(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem123] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel78(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel40 = Field(..., description="Ecommerce Product detail view attributes")
    relationships: Relationships


class ValueModel36(ValueModel2):
    pass


class ValueModel37(ValueModel):
    pass


class CustomDimensionModel25(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel37, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel103(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    grand_total: str = Field(..., description="Object key with grand total")
    product_dimensions: List[ProductDimension] = Field(
        ..., description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: List[CustomDimensionModel25] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel123(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem124] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel79(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel40 = Field(..., description="Ecommerce Cart update attributes")
    relationships: Relationships


class TemplateOptionsModel104(TemplateOptionsModel30):
    pass


class AttributesModel41(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel104 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel124(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem125] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel80(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel41 = Field(..., description="Cookie Information CMP Integration tag attributes")
    relationships: Relationships


class AttributesModel42(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: Dict[str, Any] = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel125(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem126] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel81(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel42 = Field(..., description="Custom tag attributes")
    relationships: Relationships


class IdModel19(IdModel5):
    pass


class TemplateOptionsModel105(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel19, VariableReference] = Field(..., description="Generic tag id")


class AttributesModel43(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: str = Field(
        ...,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: bool = Field(
        ...,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: DocumentWrite = Field(
        ...,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: bool = Field(
        ...,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    is_published: bool = Field(
        ...,
        description="Flag describing whether tag is published (true) or not published (false)",
    )
    priority: int = Field(
        ...,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    tag_type: TagType = Field(
        ...,
        description="Field describing whether tag is synchronous (sync) or asynchronous (async). Please note that sync tags are deprecated.",
    )
    name: str = Field(..., description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: bool = Field(
        ...,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Scheduler = Field(..., description="Tag flight date and time definition")
    consent_type: ConsentType = Field(..., description="Consent type")
    template: Template = Field(..., description="Tag template")
    template_options: TemplateOptionsModel105 = Field(..., description="[Tag template options](#tag-template-options)")
    created_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )
    updated_at: str = Field(
        ...,
        description="ISO 8601",
        pattern="^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\+[0-9]{2}:[0-9]{2}$",
        title="DateTime",
    )


class TriggersModel126(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem127] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel82(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel43 = Field(..., description="A/B Tasty tag attributes")
    relationships: Relationships


class TemplateOptionsModel106(TemplateOptionsModel32):
    pass


class TriggersModel127(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem128] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel83(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel43 = Field(..., description="Clicktale tag attributes")
    relationships: Relationships


class ConversionTrackingModel4(ConversionTrackingModel3):
    pass


class TemplateOptionsModel107(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type41 = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTrackingModel4 = Field(..., description="Conversion tracking definition")
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to DoubleClick (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )


class TriggersModel128(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem129] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel84(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel43 = Field(..., description="DoubleClick Conversion tag attributes")
    relationships: Relationships


class TemplateOptionsModel108(TemplateOptionsModel34):
    pass


class TriggersModel129(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem130] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel85(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel43 = Field(..., description="Optimizely tag attributes")
    relationships: Relationships


class AccountIdModel4(AccountIdModel):
    pass


class TemplateOptionsModel109(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountIdModel4, VariableReference] = Field(..., description="VWO account identifier")


class TriggersModel130(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem131] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0ResponseDataModel86(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel43 = Field(..., description="Visual Website Optimizer tag attributes")
    relationships: Relationships


class AttributesModel44(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Optional[str] = Field(
        default=None,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")


class TriggersModel131(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem132] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class RelationshipsModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    triggers: Optional[TriggersModel131] = Field(default=None, description="Tag triggers")


class Field0RequestDataModel43(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel44] = Field(default=None, description="Custom tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel110(TemplateOptions):
    pass


class AttributesModel45(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Optional[str] = Field(
        default=None,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template_options: Optional[TemplateOptionsModel110] = Field(
        default=None, description="[Tag template options](#tag-template-options)"
    )


class TriggersModel132(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem133] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel44(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel45] = Field(default=None, description="Custom content attributes")
    relationships: Optional[RelationshipsModel] = None


class AttributesModel46(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Optional[str] = Field(
        default=None,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")


class TriggersModel133(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem134] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel45(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel46] = Field(default=None, description="Custom popup attributes")
    relationships: Optional[RelationshipsModel] = None


class NameModel5(Name):
    pass


class ValueModel38(Value):
    pass


class PiwikCustomVariableModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom variable number", ge=1, le=20)
    name: Union[NameModel5, VariableReference] = Field(..., description="Custom variable name")
    value: Union[int, float, bool, ValueModel38, VariableReference] = Field(..., description="Custom variable value")
    scope: Scope = Field(..., description="Custom variable scope")


class ValueModel39(ValueModel):
    pass


class PiwikCustomDimensionModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel39, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel111(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    link_tracking: Optional[bool] = Field(default=True, description="Enables download and outlink tracking")
    content_tracking: Optional[ContentTracking] = Field(
        default=None,
        description="Track all or visible content impressions within a page",
    )
    cross_domain_tracking: Optional[bool] = Field(default=None, description="Enables cross domain tracking")
    heart_beat_timer: Optional[HeartBeatTimer] = Field(
        default=None, description="Accurately measure the time spent on each page"
    )
    user_id: Optional[Union[UserId, VariableReference]] = Field(
        default=None,
        description="User ID to connect together a given user's data collected from multiple sources",
    )
    cookie_domain: Optional[Union[CookieDomain, VariableReference]] = Field(
        default=None, description="Share the tracking cookie across subdomains"
    )
    disable_cookies: Optional[bool] = Field(
        default=None,
        description="Disables all first party cookies (is ignored and will be removed in next version). This setting is now reflected in privacyUseCookies attribute in App scope.",
    )
    secure_cookie: Optional[bool] = Field(
        default=None,
        description="Enable secure cookie flag on all first party cookies. This should be used when your website is only available under HTTPS so that all tracking cookies are always sent over secure connection.",
    )
    visitor_cookie_timeout: Optional[int] = Field(default=None, description="Visitor cookie timeout in seconds")
    referral_cookie_timeout: Optional[int] = Field(
        default=None,
        description="Referral cookie timeout in seconds (is ignored and will be removed in next version)",
    )
    session_cookie_timeout: Optional[int] = Field(default=None, description="Session cookie timeout in seconds")
    js_error_tracking: Optional[bool] = Field(default=True, description="Automatically track JavaScript errors")
    track_page_view: Optional[bool] = Field(default=True, description="Track page view")
    piwik_custom_variables: Optional[List[PiwikCustomVariableModel2]] = Field(
        default=None, description="Custom variables", max_length=20, min_length=0
    )
    piwik_custom_dimensions: Optional[List[PiwikCustomDimensionModel2]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class AttributesModel47(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template_options: Optional[TemplateOptionsModel111] = Field(
        default=None, description="[Tag template options](#tag-template-options)"
    )


class TriggersModel134(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem135] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel46(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Piwik PRO tag attributes")
    relationships: Optional[RelationshipsModel] = None


class CustomDimensionModel26(PiwikCustomDimensionModel2):
    pass


class TemplateOptionsModel112(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    custom_dimensions: List[CustomDimensionModel26] = Field(
        ..., description="Custom dimensions", max_length=400, min_length=1
    )


class TriggersModel135(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem136] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel47(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Piwik PRO Custom Dimensions tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class NameModel6(NameModel):
    pass


class CustomDimensionModel27(PiwikCustomDimensionModel2):
    pass


class TemplateOptionsModel113(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    category: Union[Category, VariableReference] = Field(..., description="Event category")
    action: Union[Action, VariableReference] = Field(..., description="Event action")
    name: Optional[Union[NameModel6, VariableReference]] = Field(default=None, description="Event name")
    value: Optional[Union[float, int, VariableReference]] = Field(default=None, description="Event value")
    custom_dimensions: Optional[List[CustomDimensionModel27]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel136(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem137] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel48(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Piwik PRO Custom Event tag attributes")
    relationships: Optional[RelationshipsModel] = None


class IdModel20(Id):
    pass


class RevenueModel5(Revenue):
    pass


class CustomDimensionModel28(PiwikCustomDimensionModel2):
    pass


class TemplateOptionsModel114(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel20, VariableReference] = Field(..., description="Goal identifier")
    revenue: Optional[Union[RevenueModel5, VariableReference]] = Field(default=None, description="Goal revenue")
    custom_dimensions: Optional[List[CustomDimensionModel28]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel137(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem138] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel49(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Piwik PRO Goal Conversion tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class CustomDimensionModel29(PiwikCustomDimensionModel2):
    pass


class TemplateOptionsModel115(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    url: Union[Url, VariableReference] = Field(
        ...,
        description="Page URL (for example: `https://example.org`, `/pages/about-us`)",
    )
    document_title: Optional[Union[DocumentTitle, VariableReference]] = Field(default=None, description="Page title")
    custom_dimensions: Optional[List[CustomDimensionModel29]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel138(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem139] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel50(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Piwik PRO Virtual Page View tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class AdvertiserIdModel5(AdvertiserId):
    pass


class PixelIdModel5(PixelId):
    pass


class ConversionValueModel5(ConversionValue):
    pass


class ConversionDataModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_value: Union[ConversionValueModel5, VariableReference] = Field(..., description="Amount to count")
    currency: Union[Currency, VariableReference] = Field(
        ...,
        description="Conform to https://help.adroll.com/hc/en-us/articles/213429827",
    )


class TemplateOptionsModel116(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    advertiser_id: Union[AdvertiserIdModel5, VariableReference] = Field(..., description="Advertiser id")
    pixel_id: Union[PixelIdModel5, VariableReference] = Field(..., description="Pixel id")
    conversion_data: Optional[ConversionDataModel2] = Field(
        default=None,
        description="Conform to https://help.adroll.com/hc/en-us/articles/212629938-Enhanced-Conversion-Tracking",
    )


class TriggersModel139(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem140] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel51(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Adroll tag attributes")
    relationships: Optional[RelationshipsModel] = None


class IdModel21(IdModel):
    pass


class TemplateOptionsModel117(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel21, VariableReference] = Field(..., description="Universal Event Tracking Tag id")


class TriggersModel140(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem141] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel52(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Bing Ads tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel118(TemplateOptionsModel7):
    pass


class TriggersModel141(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem142] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel53(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Crazy Egg tag attributes")
    relationships: Optional[RelationshipsModel] = None


class AdvertiserIdModel6(AdvertiserIdModel):
    pass


class RevenueModel6(RevenueModel):
    pass


class ValueModel40(ValueModel1):
    pass


class CustomVariableModel14(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Variable name `[u1, u2, ..., u100]`",
        pattern="^u([1-9][0-9]?|100)$",
    )
    value: Union[int, float, ValueModel40, VariableReference] = Field(..., description="Variable value")


class TemplateOptionsModel119(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel6, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethod = Field(..., description="Counting method")
    revenue: Union[RevenueModel6, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    quantity: Union[Quantity, VariableReference] = Field(..., description="Number of items sold")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel14]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel142(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem143] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel54(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Floodlight Sales (item_sold) tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class CustomVariableModel15(CustomVariableModel14):
    pass


class TemplateOptionsModel120(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type11 = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel6, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel = Field(..., description="Counting method")
    revenue: Union[RevenueModel6, VariableReference] = Field(..., description="Revenue amount")
    order_id: Union[OrderId, VariableReference] = Field(..., description="Order identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel15]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel143(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem144] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel55(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Floodlight Sales (transactions) tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class CustomVariableModel16(CustomVariableModel14):
    pass


class TemplateOptionsModel121(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel6, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel1 = Field(..., description="Counting method")
    session_id: Union[SessionId, VariableReference] = Field(..., description="Session identifier")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel16]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel144(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem145] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel56(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Floodlight Counter (session) tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class CustomVariableModel17(CustomVariableModel14):
    pass


class TemplateOptionsModel122(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel6, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel2 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel17]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel145(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem146] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel57(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Floodlight Counter (standard_method) tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class CustomVariableModel18(CustomVariableModel14):
    pass


class TemplateOptionsModel123(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type13Model = Field(
        ...,
        description="Floodlight type. Despite rebranding the tag name, the template options type value remained the same due to maintaining backward compatibility.",
    )
    advertiser_id: Union[AdvertiserIdModel6, VariableReference] = Field(..., description="Advertiser identifier")
    group_tag_string: Union[GroupTagString, VariableReference] = Field(..., description="Group tag")
    activity_tag_string: Union[ActivityTagString, VariableReference] = Field(..., description="Activity tag")
    counting_method: CountingMethodModel3 = Field(..., description="Counting method")
    u: Optional[Union[int, float, U, VariableReference]] = Field(default=None, description="Standard variable U")
    tran: Optional[Union[int, float, Tran, VariableReference]] = Field(
        default=None, description="Standard variable Tran"
    )
    custom_variables: Optional[List[CustomVariableModel18]] = Field(
        default=None, description="Custom variables", max_length=100
    )


class TriggersModel146(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem147] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel58(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Floodlight Counter (unique_method) tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class PixelIdModel6(PixelIdModel):
    pass


class TemplateOptionsModel124(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pixel_id: Union[PixelIdModel6, VariableReference] = Field(..., description="Pixel ID")
    event: Event
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to Facebook Ads Manager (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )
    event_properties: Optional[List[EventProperty]] = Field(default=None, description="Additional event parameters")


class TriggersModel147(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem148] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel59(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Meta pixel tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel125(TemplateOptionsModel51):
    pass


class TriggersModel148(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem149] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel60(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Google Ads Remarketing tag attributes")
    relationships: Optional[RelationshipsModel] = None


class ConversionValueModel6(ConversionValueModel):
    pass


class ConversionTrackingModel5(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    conversion_label: Union[ConversionLabel, VariableReference] = Field(..., description="Conversion label")
    conversion_value: Optional[Union[ConversionValueModel6, VariableReference]] = Field(
        default=None, description="Conversion value"
    )


class TemplateOptionsModel126(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type18Model = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTrackingModel5 = Field(..., description="Conversion tracking definition")
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to Google Ads (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )


class TriggersModel149(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem150] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel61(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(
        default=None, description="Google Ads Tracking Conversion tag attributes"
    )
    relationships: Optional[RelationshipsModel] = None


class IdModel22(IdModel1):
    pass


class OptimizeSetupModel2(OptimizeSetup):
    pass


class TemplateOptionsModel127(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel22, VariableReference] = Field(..., description="Tracking identifier")
    optimize_setup: Optional[OptimizeSetupModel2] = Field(default=None, description="Google Optimize setup")


class TriggersModel150(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem151] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel62(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Google Analytics tag attributes")
    relationships: Optional[RelationshipsModel] = None


class IdModel23(IdModel2):
    pass


class TemplateOptionsModel128(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel23, VariableReference] = Field(..., description="Hotjar identifier")


class TriggersModel151(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem152] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel63(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Hotjar tag attributes")
    relationships: Optional[RelationshipsModel] = None


class IdModel24(IdModel3):
    pass


class TemplateOptionsModel129(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel24, VariableReference] = Field(..., description="Hub identifier")


class TriggersModel152(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem153] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel64(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="HubSpot tag attributes")
    relationships: Optional[RelationshipsModel] = None


class IdModel25(IdModel4):
    pass


class TemplateOptionsModel130(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel25, VariableReference] = Field(..., description="Partner identifier")


class TriggersModel153(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem154] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel65(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="LinkedIn tag attributes")
    relationships: Optional[RelationshipsModel] = None


class AccountIdModel5(AccountId):
    pass


class TemplateOptionsModel131(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountIdModel5, VariableReference] = Field(..., description="Munchkin account identifier")


class TriggersModel154(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem155] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel66(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Marketo tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel132(TemplateOptionsModel21):
    pass


class TriggersModel155(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem156] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel67(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Mautic tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel133(TemplateOptionsModel22):
    pass


class TriggersModel156(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem157] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel68(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Qualaroo tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel134(TemplateOptionsModel23):
    pass


class TriggersModel157(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem158] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel69(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="SALESmanago tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel135(TemplateOptionsModel24):
    pass


class TriggersModel158(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem159] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel70(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Salesforce Pardot tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel136(TemplateOptionsModel25):
    pass


class TriggersModel159(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem160] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel71(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Video HTML5 tag attributes")
    relationships: Optional[RelationshipsModel] = None


class TemplateOptionsModel137(TemplateOptionsModel26):
    pass


class TriggersModel160(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem161] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel72(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel47] = Field(default=None, description="Video YouTube tag attributes")
    relationships: Optional[RelationshipsModel] = None


class AttributesModel48(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")


class TriggersModel161(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem162] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel73(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel48] = Field(default=None, description="Heatmaps tag attributes")
    relationships: Optional[RelationshipsModel] = None


class AttributesModel49(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Optional[str] = Field(
        default=None,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    document_write: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is using JavaScripts document.write method (true) or not (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template_options: Optional[Dict[str, Any]] = Field(
        default=None, description="[Tag template options](#tag-template-options)"
    )


class TriggersModel162(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem163] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel74(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel49] = Field(default=None, description="Abandoned tag attributes")
    relationships: Optional[RelationshipsModel] = None


class ValueModel41(ValueModel2):
    pass


class ValueModel42(ValueModel):
    pass


class CustomDimensionModel30(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel42, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel138(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    order: Order = Field(..., description="Order details")
    product_dimensions: Optional[List[ProductDimension]] = Field(
        default=None, description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: Optional[List[CustomDimensionModel30]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class AttributesModel50(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template_options: Optional[TemplateOptionsModel138] = None


class TriggersModel163(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem164] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class RelationshipsModel1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    triggers: TriggersModel163 = Field(..., description="Tag triggers")


class Field0RequestDataModel75(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel50 = Field(..., description="Ecommerce Order attributes")
    relationships: Optional[RelationshipsModel1] = None


class ValueModel43(ValueModel2):
    pass


class ValueModel44(ValueModel):
    pass


class CustomDimensionModel31(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel44, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel139(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    product_dimensions: Optional[List[ProductDimension]] = Field(
        default=None, description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: Optional[List[CustomDimensionModel31]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel164(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem165] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel76(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel50 = Field(..., description="Ecommerce Add to cart attributes")
    relationships: Optional[RelationshipsModel1] = None


class ValueModel45(ValueModel2):
    pass


class ValueModel46(ValueModel):
    pass


class CustomDimensionModel32(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel46, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel165(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem166] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel77(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel50 = Field(..., description="Ecommerce Remove from cart attributes")
    relationships: Optional[RelationshipsModel1] = None


class ValueModel47(ValueModel2):
    pass


class ValueModel48(ValueModel):
    pass


class CustomDimensionModel33(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel48, VariableReference] = Field(..., description="Custom dimension value")


class TriggersModel166(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem167] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel78(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel50 = Field(..., description="Ecommerce Product detail view attributes")
    relationships: Optional[RelationshipsModel1] = None


class ValueModel49(ValueModel2):
    pass


class ValueModel50(ValueModel):
    pass


class CustomDimensionModel34(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: int = Field(..., description="Custom dimension number", ge=1, le=400)
    value: Union[int, float, bool, ValueModel50, VariableReference] = Field(..., description="Custom dimension value")


class TemplateOptionsModel140(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    product_mapping: ProductMapping = Field(..., description="Product mapping")
    category_mapping_type: CategoryMappingType = Field(..., description="Category mapping type")
    category_mapping: Optional[CategoryMapping] = Field(default=None, description="Category mapping")
    products_array: str = Field(..., description="Object key with products array")
    grand_total: str = Field(..., description="Object key with grand total")
    product_dimensions: Optional[List[ProductDimension]] = Field(
        default=None, description="Product dimensions", max_length=20, min_length=0
    )
    custom_dimensions: Optional[List[CustomDimensionModel34]] = Field(
        default=None, description="Custom dimensions", max_length=400, min_length=0
    )


class TriggersModel167(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem168] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel79(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel50 = Field(..., description="Ecommerce Cart update attributes")
    relationships: Optional[RelationshipsModel1] = None


class TemplateOptionsModel141(TemplateOptionsModel30):
    pass


class AttributesModel51(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template_options: Optional[TemplateOptionsModel141] = Field(
        default=None, description="[Tag template options](#tag-template-options)"
    )


class TriggersModel168(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem169] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class RelationshipsModel2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    triggers: Optional[TriggersModel168] = Field(default=None, description="Tag triggers")


class Field0RequestDataModel80(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel51] = Field(
        default=None, description="Cookie Information CMP Integration tag attributes"
    )
    relationships: Optional[RelationshipsModel2] = None


class AttributesModel52(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Optional[str] = Field(
        default=None,
        description="Tag code (html, script or css)",
        max_length=65536,
        min_length=1,
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")


class TriggersModel169(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem170] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel81(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel52] = Field(default=None, description="Custom tag attributes")
    relationships: Optional[RelationshipsModel2] = None


class IdModel26(IdModel5):
    pass


class TemplateOptionsModel142(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Union[IdModel26, VariableReference] = Field(..., description="Generic tag id")


class AttributesModel53(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    disable_in_debug_mode: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should be disabled in debug mode (true) or enabled (false)",
    )
    is_active: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag is active (true) or inactive (false)",
    )
    priority: Optional[int] = Field(
        default=None,
        description="Order of firing tags (bigger number means earlier)",
        ge=0,
        le=4294967295,
    )
    name: Optional[str] = Field(default=None, description="Tag name", max_length=255, min_length=1)
    respect_visitors_privacy: Optional[bool] = Field(
        default=None,
        description="Flag describing whether tag should respect visitors privacy settings (DNT header, opt-out)",
    )
    scheduler: Optional[Scheduler] = Field(default=None, description="Tag flight date and time definition")
    consent_type: Optional[ConsentType] = Field(default=None, description="Consent type")
    template_options: Optional[TemplateOptionsModel142] = Field(
        default=None, description="[Tag template options](#tag-template-options)"
    )


class TriggersModel170(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem171] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel82(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel53] = Field(default=None, description="A/B Tasty tag attributes")
    relationships: Optional[RelationshipsModel2] = None


class TemplateOptionsModel143(TemplateOptionsModel32):
    pass


class TriggersModel171(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem172] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel83(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel53] = Field(default=None, description="Clicktale tag attributes")
    relationships: Optional[RelationshipsModel2] = None


class ConversionTrackingModel6(ConversionTrackingModel5):
    pass


class TemplateOptionsModel144(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    type: Type41 = Field(..., description="Google Ads type")
    conversion_id: Union[ConversionId, VariableReference] = Field(..., description="Conversion identifier")
    conversion_tracking: ConversionTrackingModel6 = Field(..., description="Conversion tracking definition")
    audience: Optional[Any] = Field(
        default=None,
        description="Audience to export to DoubleClick (same audience should be set on trigger). This value is abandoned and it won't be used even if you will pass it.",
    )


class TriggersModel172(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem173] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel84(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel53] = Field(default=None, description="DoubleClick Conversion tag attributes")
    relationships: Optional[RelationshipsModel2] = None


class TemplateOptionsModel145(TemplateOptionsModel34):
    pass


class TriggersModel173(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem174] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel85(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel53] = Field(default=None, description="Optimizely tag attributes")
    relationships: Optional[RelationshipsModel2] = None


class AccountIdModel6(AccountIdModel):
    pass


class TemplateOptionsModel146(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    account_id: Union[AccountIdModel6, VariableReference] = Field(..., description="VWO account identifier")


class TriggersModel174(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: List[TriggerRelationshipItem175] = Field(
        ...,
        description="JSON:API 1.0 relationship data",
        min_length=0,
        title="Trigger relationship",
    )


class Field0RequestDataModel86(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Tag identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: Optional[AttributesModel53] = Field(default=None, description="Visual Website Optimizer tag attributes")
    relationships: Optional[RelationshipsModel2] = None


class AttributesModel54(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: Optional[str] = Field(default=None, description="New tag's name", max_length=255, min_length=1)
    with_triggers: bool = Field(
        ...,
        description="Flag indicating whether tag is copied with or without triggers",
    )


class Type176(Enum):
    APP = "app"


class Field0RelationshipData(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="Application identifier",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type176 = Field(..., description="Application resource type")


class TargetApp(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: Field0RelationshipData = Field(
        ...,
        description="Target application data",
        title="JSON:API 1.0 relationship data",
    )


class RelationshipsModel3(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    target_app: TargetApp = Field(..., description="Target application")


class Field0RequestDataModel87(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = Field(
        default=None,
        description="New tag's identifier. Forbidden in the case of overwriting tags in other apps.",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    attributes: AttributesModel54 = Field(..., description="Copy tag attributes")
    relationships: RelationshipsModel3 = Field(..., description="Copy tag relationships")


class IdModel27(BaseModel):
    pass


class Type176Model1(Enum):
    OPERATION = "operation"


class Field0RelationshipDataModel(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: IdModel27
    type: Type176Model1 = Field(..., description="Operation resource type")


class Operation(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data: Field0RelationshipDataModel = Field(..., description="Operation data", title="JSON:API 1.0 relationship data")


class RelationshipsModel4(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    operation: Operation = Field(..., description="Operation")


class Field0ResponseDataModel87(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: str = Field(
        ...,
        description="New tag's identifier. Forbidden in the case of overwriting tags in other apps.",
        pattern="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        title="UUID",
    )
    type: Type = Field(..., description="Tag resource type")
    relationships: RelationshipsModel4 = Field(..., description="Copy tag relationships")
